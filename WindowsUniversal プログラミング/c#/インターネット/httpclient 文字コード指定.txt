//PM> Install-Package Portable.Text.Encoding 


            var filter = new HttpBaseProtocolFilter();
            filter.AllowAutoRedirect = false;//リダイレクトできるようにする
            
            HttpClient client = new HttpClient(filter);//HTTP設定

            //リクエストヘッダ追加
            client.DefaultRequestHeaders.Add("User-Agent", "Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0"); // ユーザーエージェント文字列をセット（オプション）
            client.DefaultRequestHeaders.Add("Accept-Language", "ja,en-US;q=0.7,en;q=0.3");// 受け入れ言語をセット（オプション）
            client.DefaultRequestHeaders.Add("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");//Accept（オプション）
                                                                                                                          //client.DefaultRequestHeaders.Add("Host", "yun.cup.com");//Host: ドメイン名 uriのドメインと一致してなくてはならない 省略すると自動で補間される

            //HttpResponseMessage s = await client.GetAsync(uri);//HttpResponseMessageで受け取る ステータスコードなどが見れる

            //content = await client.GetStringAsync(uri);//HTMLをstringで取得

            //inputデータ
            var content1 = new HttpFormUrlEncodedContent(new Dictionary<string, string>
            {
                { "id","yksrssr" },
                {  "pw","Ysrssr" }
            });

            //form action
            Uri ur = new Uri("https://asp.ydgdhtdthadoken.jp/hotel/login.asp");

            //post クッキー取得
            var response = await client.PostAsync(ur, content1);

            //ステータスコード確認
            if (response.StatusCode== HttpStatusCode.Found)
            {
                var respons = await client.GetAsync(new Uri("https://asp.yadoken.jp/"));

                // 文字エンコーディングはシフトJIS固定とする
                Encoding enc = Portable.Text.Encoding.GetEncoding("Shift_JIS");
                //Encoding enc = Encoding.GetEncoding("shift_jis");
                var stream = (await respons.Content.ReadAsBufferAsync()).AsStream();
                using (var reader = (new StreamReader(stream, enc, true)) as TextReader)
                {
                    string fcf = await reader.ReadToEndAsync();
                }

                string sssh = await respons.Content.ReadAsStringAsync();
            }
