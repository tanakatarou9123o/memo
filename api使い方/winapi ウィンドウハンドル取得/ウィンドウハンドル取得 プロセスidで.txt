#include <tlhelp32.h>


HANDLE hSnap,hProcess;





	/*ここからプロセスを開く処理*/
	PROCESSENTRY32 pe;
	BOOL bResult=0;				//Process32Nextの成否
	DWORD dwProcessId;			//OpenProcessで必要
	
	while(bResult==false)
	{
		hSnap=CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS,0);    //プロセスのスナップショット取得
		pe.dwSize = sizeof(pe);					   				 //構造体サイズ
		bResult = Process32First(hSnap, &pe);     				 //プロセス最初にセット
		while(bResult)                                   		 //dwProcessIdにProcessIDがセットされるまでループ
		{
			if(0==wcscmp(pe.szExeFile,FAILNAME))				 //pe.szExeFileとプロセス名が一致したら
			{dwProcessId = pe.th32ProcessID; break;}			 //pe.th32ProcessIDをdwProcessIdに入れてループを抜ける
			bResult = Process32Next(hSnap, &pe);        //次のプロセスをセット 失敗したらfalseを返す
		}
		if(bResult==false){MessageBox(NULL,TEXT("改造対象のゲームを起動してください"),TEXT("エラー"),MB_OK);}
	}
	hProcess = OpenProcess(PROCESS_ALL_ACCESS, TRUE, dwProcessId); //アクセス権限  プロセスを開く
	if(hProcess==NULL)
	{
		MessageBox(NULL,TEXT("プロセスを開けませんでした"),TEXT("プロセスを開けませんでした"),MB_OK);
		return 0;
	}
	/*ここまでプロセスを開く処理*/



	/*ここからインスタンスハンドル取得処理*/
	HWND hins = GetTopWindow(NULL); 								//一番上のウィンドウハンドルを取得
	do
	{
		DWORD ProcessID;  											//プロセスid取得用変数
		GetWindowThreadProcessId( hins, &ProcessID);				//プロセスid取得
		if(dwProcessId == ProcessID){break;}						//プロセスid比較
	}while((hins = GetNextWindow( hins, GW_HWNDNEXT)) != NULL);     //次のウィンドウに
	if(hins==NULL){return 0;}										//取得に失敗したら終わる
	ins= GetWindowLong(hins,GWL_HINSTANCE);							//インスタンスハンドル取得
	/*ここまでインスタンスハンドル取得処理*/