#include <tlhelp32.h>

HANDLE hSnap,hProcess;
PROCESSENTRY32 pe;
BOOL bResult;				//Process32Nextの成否
DWORD dwProcessId;			//OpenProcessで必要
HWND hkew;            		       //ウィンドウハンドル




	hSnap=CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS,0);    //プロセスのスナップショット取得
	pe.dwSize = sizeof(pe);    				//構造体サイズ
	bResult = Process32First(hSnap, &pe);     		//プロセス最初にセット
	while(bResult)                                   	//dwProcessIdにProcessIDがセットされるまでループ
	{
		if(0==wcscmp(pe.szExeFile,TEXT("KeePass.exe")))		//pe.szExeFileとプロセス名が一致したら
		{dwProcessId = pe.th32ProcessID; break;}			//pe.th32ProcessIDをdwProcessIdに入れてループを抜ける
		
		bResult = Process32Next(hSnap, &pe);        //次のプロセスをセット 失敗したらfalseを返す
	}

//ウィンドウのハンドル取得
	do{
		if(GetWindowLong( hWnd, GWL_HWNDPARENT) != 0 || !IsWindowVisible( hWnd))
			continue;
		DWORD ProcessID;
		GetWindowThreadProcessId( hWnd, &ProcessID);
		if(dwProcessId == ProcessID)
			hkew=hWnd;
	} while((hWnd = GetNextWindow( hWnd, GW_HWNDNEXT)) != NULL);
//ウィンドウのハンドル取得

	SetForegroundWindow(hkew); //ウィンドウをアクティブに
//キーボード入力
	keybd_event(0x4B,0,0,0);
	keybd_event(0x4B, 0, KEYEVENTF_KEYUP, 0);
	keybd_event(0x4F,0,0,0);
	keybd_event(0x4F, 0, KEYEVENTF_KEYUP, 0);
	keybd_event(0x55,0,0,0);
	keybd_event(0x55, 0, KEYEVENTF_KEYUP, 0);
	keybd_event(0x48,0,0,0);
	keybd_event(0x48, 0, KEYEVENTF_KEYUP, 0);
	keybd_event(0x45,0,0,0);
	keybd_event(0x45, 0, KEYEVENTF_KEYUP, 0);	
	keybd_event(0x49,0,0,0);
	keybd_event(0x49, 0, KEYEVENTF_KEYUP, 0);
	keybd_event(VK_RETURN,0,0,0);
	keybd_event(VK_RETURN, 0, KEYEVENTF_KEYUP, 0);
//キーボード入力