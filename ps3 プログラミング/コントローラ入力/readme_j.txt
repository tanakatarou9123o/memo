[SCE CONFIDENTIAL DOCUMENT]
PlayStation(R)3 Programmer Tool Runtime Library 400.001
                  Copyright (C) 2007 Sony Computer Entertainment Inc.
                                                 All Rights Reserved.

概要：
    padutil.aは、コントローラを用いたアプリケーションを開発する際の
    ユーティリティ関数を集めたライブラリです。
    
使用方法：
    1.使用するアプリケーションで padutil.h をインクルードする。
    2.使用するアプリケーションで padutil.a をリンクする。
    3.libio_stub.a, libpadfilter.a をリンクする。（-lio_stub -lpadfilter）
    4.アプリケーション開始時に呼び出す関数: cellPadUtilPadInit()
    5.パッド情報取得前に呼び出す関数:       cellPadUtilUpdate()
    6.アプリケーション終了時に呼び出す関数: cellPadUtilPadEnd()


解説：

  padutilで扱えるコントローラは以下のものになります。
    ・ワイヤレスコントローラ（SIXAXIS）
    ・ワイヤレスコントローラ（DUALSHOCK 3）
    ・USB HID spec 1.1 準拠ゲームコントローラ
  
  また、主なAPIの仕様は以下の通りです。

======================================================================
                             定数と構造体
======================================================================

----------------------------------------------------------------------
ボタンID 定数
----------------------------------------------------------------------
[解説]
  コントローラのボタンに対応する定数です。
  API解説に[複数指定可]と記述がある場合には、
  OR演算子で組み合わせて使用することが出来ます。

[詳細]
  CELL_UTIL_BUTTON_SELECT     SELECT ボタン
  CELL_UTIL_BUTTON_L3         L3 ボタン（左スティックを押し込む）
  CELL_UTIL_BUTTON_R3         R3 ボタン（右スティックを押し込む）
  CELL_UTIL_BUTTON_START      START ボタン
  CELL_UTIL_BUTTON_UP         上 方向キー（↑）
  CELL_UTIL_BUTTON_RIGHT      右 方向キー（→）
  CELL_UTIL_BUTTON_DOWN       下 方向キー（↓）
  CELL_UTIL_BUTTON_LEFT       左 方向キー（←）
  CELL_UTIL_BUTTON_L2         L2 ボタン
  CELL_UTIL_BUTTON_R2         R2 ボタン
  CELL_UTIL_BUTTON_L1         L1 ボタン
  CELL_UTIL_BUTTON_R1         R1 ボタン
  CELL_UTIL_BUTTON_TRIANGLE   △ ボタン
  CELL_UTIL_BUTTON_CIRCLE     ○ ボタン
  CELL_UTIL_BUTTON_CROSS      × ボタン
  CELL_UTIL_BUTTON_SQUARE     □ ボタン

----------------------------------------------------------------------
アナログスティックID 定数
----------------------------------------------------------------------
[解説]
  コントローラのアナログスティックに対応する定数です。

[詳細]
  CELL_UTIL_ANALOG_RIGHT      右スティック
  CELL_UTIL_ANALOG_LEFT       左スティック

----------------------------------------------------------------------
CellPadUtilAxis 構造体
----------------------------------------------------------------------
[解説]
  アナログスティックの値を取得する際に使用します。
  
[詳細]
  struct {
      uint8_t x; /* アナログスティックのX軸データ */
      uint8_t y; /* アナログスティックのY軸データ */
  };


----------------------------------------------------------------------
CellPadUtilPress 構造体
----------------------------------------------------------------------
[解説]
  感圧データの値を取得する際に使用します。
  
[詳細]
  struct {
      uint8_t up, right, down, left; /* 感圧情報（↑、→、↓、←） */
      uint8_t L1, L2, R1, R2;        /* 感圧情報（L1、L2、R1、R2） */
      uint8_t circle, cross, square, triangle; /* 感圧情報（○、×、□、△） */
  };


----------------------------------------------------------------------
CellPadUtilSensor 構造体
----------------------------------------------------------------------
[解説]
  センサデータの値を取得する際に使用します。
  
[詳細]
  struct {
      uint16_t x; /* センサ情報（X軸） */
      uint16_t y; /* センサ情報（Y軸） */
      uint16_t z; /* センサ情報（Z軸） */
      uint16_t g; /* センサ情報（角速度） */
  };


======================================================================
                          API リファレンス
======================================================================

----------------------------------------------------------------------
bool cellPadUtilPadInit(void)
----------------------------------------------------------------------
[解説]
  padutilを初期化します。
  アプリケーション開始時に呼び出してください。
  
[返り値]
  成功した場合、trueを返します。
  失敗した場合、falseを返します。


----------------------------------------------------------------------
void cellPadUtilPadEnd(void)
----------------------------------------------------------------------
[解説]
  padutilによる処理を終了します。
  アプリケーション終了時に呼び出してください。
  
[返り値]
  なし


----------------------------------------------------------------------
bool cellPadUtilIsConnected(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラが接続されているかを調べます。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  
[返り値]
  コントローラが接続されている場合、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
bool cellPadUtilUpdate(void)
----------------------------------------------------------------------
[解説]
  コントローラのデータの更新の有無を調べます。
  また、更新が合った場合は、内部バッファを更新します。
  パッド処理を行う前に、必ず本関数を呼び出してください。
  本関数がfalseを返した場合、パッド処理はスキップして構いません。
  
[返り値]
  コントローラに更新が合った場合、trueを返します。
  コントローラに更新がなかった場合や
  PSボタンが押されているなどアプリケーションで処理すべき更新がない場合、falseを返します。


----------------------------------------------------------------------
int16_t cellPadUtilGetFirstConnectedPad(void)
----------------------------------------------------------------------
[解説]
  接続されているコントローラを調べます。

[返り値]
  接続されているコントローラNo.(0〜6)を返します。
  接続されているコントローラがない場合は -1 を返します。


----------------------------------------------------------------------
bool cellPadUtilButtonPressed(uint8_t pad, uint32_t button)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、buttonで指定されたボタンが押されているかを取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  uint32_t button:
    - ボタンID [複数指定可]
  
[返り値]
  ボタンが押されている場合は、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
bool cellPadUtilButtonReleased(uint8_t pad, uint32_t button)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、buttonで指定されたボタンが離されているかを取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  uint32_t button:
    - ボタンID [複数指定可]
  
[返り値]
  ボタンが離されている場合は、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
bool cellPadUtilButtonPressedOnce(uint8_t pad, uint32_t button)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、buttonで指定されたボタンが押された瞬間を取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  uint32_t button:
    - ボタンID [複数指定可]
  
[返り値]
  ボタンが押された瞬間に一度だけ true を返します。
  それ以外の場合は、常に false を返します。


----------------------------------------------------------------------
bool cellPadUtilButtonReleasedOnce(uint8_t pad, uint32_t button)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、buttonで指定されたボタンが離された瞬間を取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  uint32_t button:
    - ボタンID [複数指定可]
  
[返り値]
  ボタンが離された瞬間に一度だけ true を返します。
  それ以外の場合は、常に false を返します。


----------------------------------------------------------------------
uint32_t cellPadUtilGetEnterButton(void)
----------------------------------------------------------------------
[解説]
  PLAYSTATION(R)3の本体設定に基づき、決定ボタンを取得します。

[返り値]
  決定ボタンに設定されているボタンIDを返します。


----------------------------------------------------------------------
uint32_t cellPadUtilGetBackButton(void)
----------------------------------------------------------------------
[解説]
  PLAYSTATION(R)3の本体設定に基づき、キャンセルボタンを取得します。

[返り値]
  キャンセルボタンに設定されているボタンIDを返します。


----------------------------------------------------------------------
CellPadUtilAxis cellPadUtilGetAxisValue(uint8_t pad, uint32_t axis)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、axisで指定されたアナログスティックの値を取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  uint32_t axis:
    - アナログスティックID
      (CELL_UTIL_ANALOG_RIGHT / CELL_UTIL_ANALOG_LEFT のいずれか）
  
[返り値]
  axisで指定されたアナログスティックの値が戻ります。
  デフォルト値は{0x80, 0x80}です。
  

----------------------------------------------------------------------
void cellPadUtilSetPressMode(bool bModeOn)
----------------------------------------------------------------------
[解説]
  感圧モードの有効／無効を切り替えます。
  無効の状態では、感圧データの値を取得できません。
  
[パラメータ]
  bool bModeOn:
    - 感圧モード指定（ON:true / OFF:false）
  
[返り値]
  なし


----------------------------------------------------------------------
bool cellPadUtilGetPressMode(void)
----------------------------------------------------------------------
[解説]
  現在の感圧モードの有効／無効を取得します。
  無効の状態や非対応のコントローラでは、感圧データの値を取得できません。
  
[返り値]
  感圧モードが有効な場合は、trueを返します
  感圧モードが無効な場合は、falseを返します


----------------------------------------------------------------------
uint8_t cellPadUtilGetButtonPressValue(uint8_t pad, uint32_t button)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、buttonで指定されたボタンの感圧データ取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  uint32_t button:
    - ボタンID
  
[返り値]
  指定されたボタンの感圧データ（0〜255）を返します。
  感圧モードが無効の場合は 0 を返します。


----------------------------------------------------------------------
CellPadUtilPress cellPadUtilGetPressValue(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、ボタンの感圧データをまとめて取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  
[返り値]
  指定されたコントローラの感圧データが入ったCellPadUtilPress構造体
  感圧モードが無効の場合は、全てのメンバに 0 が入ります。


----------------------------------------------------------------------
void cellPadUtilSetSensorMode(bool bModeOn)
----------------------------------------------------------------------
[解説]
  センサモードの有効／無効を切り替えます。
  無効の状態や非対応のコントローラでは、センサデータの値を取得できません。
  
[パラメータ]
  bool bModeOn:
    - センサモード指定（ON:true / OFF:false）
  
[返り値]
  なし


----------------------------------------------------------------------
bool cellPadUtilGetSensorMode(void)
----------------------------------------------------------------------
[解説]
  現在のセンサモードの有効／無効を取得します。
  無効の状態では、センサデータの値を取得できません。
  
[返り値]
  センサモードが有効な場合は、trueを返します
  センサモードが無効な場合は、falseを返します
  


----------------------------------------------------------------------
uint8_t cellPadUtilGetButtonSensorValue(uint8_t pad, uint32_t button)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、buttonで指定されたボタンのセンサデータ取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  uint32_t button:
    - ボタンID
  
[返り値]
  指定されたボタンのセンサデータ（0〜1023）を返します。
  センサモードが無効の場合は 512 を返します。


----------------------------------------------------------------------
CellPadUtilSensor cellPadUtilGetSensorValue(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、ボタンのセンサデータをまとめて取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  
[返り値]
  指定されたコントローラのセンサデータが入ったCellPadUtilSensor構造体
  センサモードが無効の場合は、全てのメンバに 512 が入ります。


----------------------------------------------------------------------
bool cellPadUtilSetSensorFilter(int32_t filter)
----------------------------------------------------------------------
[解説]
  センサデータのフィルタリング処理を行う際のフィルタリング方法を設定します。
  
[パラメータ]
  int32_t filter:
    - カットオフ周波数の種類
      * 50%にカット: CELL_PADFILTER_IIR_CUTOFF_2ND_LPF_BT_050
      * 20%にカット: CELL_PADFILTER_IIR_CUTOFF_2ND_LPF_BT_020
      * 10%にカット: CELL_PADFILTER_IIR_CUTOFF_2ND_LPF_BT_010
  
[返り値]
  フィルタの設定が成功した場合は、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
CellPadUtilSensor cellPadUtilGetFilterdSensorValue(uint8_t pad);
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、フィルタリング済みのセンサデータをまとめて取得します。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  
[返り値]
  指定されたコントローラのフィルタリング済みのセンサデータが入ったCellPadUtilSensor構造体
  センサモードが無効の場合は、全てのメンバに 512 が入ります。


----------------------------------------------------------------------
void cellPadUtilSetActuatorMode(bool bModeOn)
----------------------------------------------------------------------
[解説]
  振動モードの有効／無効を切り替えます。
  無効の状態やワイヤレスコントローラ（DUALSHOCK 3）以外のコントローラでは、
  コントローラを振動させることができません。
  
[パラメータ]
  bool bModeOn:
    - 振動モード指定（ON:true / OFF:false）
  
[返り値]
  なし


----------------------------------------------------------------------
bool cellPadUtilGetActuatorMode(void)
----------------------------------------------------------------------
[解説]
  現在の振動モードの有効／無効を取得します。
  
[返り値]
  振動モードが有効な場合は、trueを返します
  振動モードが無効な場合は、falseを返します


----------------------------------------------------------------------
bool cellPadUtilSetActDirect(uint8_t pad, uint8_t motor1, uint8_t motor2);
----------------------------------------------------------------------
[解説]
  ワイヤレスコントローラ（DUALSHOCK 3）を振動させます。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)
  
  uint8_t motor1:
    - モータ1の振動量を設定(0 or 1)
  
  uint8_t motor2:
    - モータ2の振動量を設定(0 〜 255)
  
[返り値]
  呼び出しが成功した場合は、trueを返します。
  それ以外の場合は、falseを返します。
  ※成功の是非と振動の有無は無関係です。


----------------------------------------------------------------------
bool cellPadUtilIsPs3Conformity(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、PLAYSTATION(3)仕様のコントローラかを調べます。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)

[返り値]
  PLAYSTATION(3)仕様の場合、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
bool cellPadUtilIsSupportedPressMode(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、感圧モード対応コントローラかを調べます。
  ワイヤレスコントローラは感圧モードに対応していますが、
  一部のもの（初期にリリースされたもの）には、非対応のものがあります。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)

[返り値]
  感圧モード対応コントローラの場合、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
bool cellPadUtilIsSupportedSensorMode(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、センサモード対応コントローラかを調べます。
  ワイヤレスコントローラはセンサモードに対応していますが、
  一部のもの（初期にリリースされたもの）には、非対応のものがあります。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)

[返り値]
  センサーモード対応コントローラの場合、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
bool cellPadUtilIsSupportedHpAnalogStick(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、高精度スティック搭載コントローラかを調べます。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)

[返り値]
  高精度スティック搭載コントローラの場合、trueを返します。
  それ以外の場合は、falseを返します。


----------------------------------------------------------------------
bool cellPadUtilIsSupportedActuator(uint8_t pad)
----------------------------------------------------------------------
[解説]
  padで指定されたコントローラについて、ワイヤレスコントローラ（DUALSHOCK 3）かを調べます。
  
[パラメータ]
  uint8_t pad:
    - コントローラNo.(0〜6)

[返り値]
  ワイヤレスコントローラ（DUALSHOCK 3）の場合、trueを返します。
  それ以外の場合は、falseを返します。


[EOF]

