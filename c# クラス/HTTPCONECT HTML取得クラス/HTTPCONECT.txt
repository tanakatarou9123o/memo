Install-Package Portable.Text.Encoding

    class HTTPCONECT
    {
        HttpClient client;
        HttpBaseProtocolFilter filter;

        public HTTPCONECT()
        {
            filter = new HttpBaseProtocolFilter();
            filter.AllowAutoRedirect = false;//リダイレクトできるようにする
            filter.CacheControl.ReadBehavior = HttpCacheReadBehavior.MostRecent;//キャッシュを無効化

            client = new HttpClient(filter);//HTTP設定

            //リクエストヘッダ追加
            client.DefaultRequestHeaders.Add("User-Agent", "Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0"); // ユーザーエージェント文字列をセット（オプション）
            client.DefaultRequestHeaders.Add("Accept-Language", "ja,en-US;q=0.7,en;q=0.3");// 受け入れ言語をセット（オプション）
            client.DefaultRequestHeaders.Add("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");//Accept（オプション）                                                                                     
                                                                                                                          //client.DefaultRequestHeaders.Add("Host", "yun.cup.com");//Host: ドメイン名 uriのドメインと一致してなくてはならない 省略すると自動で補間される
        }

        public async Task<string> gethtml(string ur = "http://localhost:31971/WebForm1.aspx")
        {
            Uri uri = new Uri(ur);//接続するURI
            string s = await client.GetStringAsync(uri);//HttpResponseMessageで受け取る ステータスコードなどが見れる

            return s;
        }


        /*
        //inputデータ
            var content1 = new HttpFormUrlEncodedContent(new Dictionary<string, string>
            {
                { "mail_tel","b234567san@yahoo.co.jp" },
                {  "password","212juy" }
            });
            
        */

        public async Task<string> Posthttp(string url, HttpFormUrlEncodedContent content1,string encs= "utf-8")
        {
            string htmls;
            // 文字エンコーディングはシフトJIS固定とする
            Encoding enc = Encoding.GetEncoding(encs);

            //form action
            Uri ur = new Uri(url);

            //post クッキー取得
            HttpResponseMessage response = await client.PostAsync(ur, content1);

            var stream = (await response.Content.ReadAsBufferAsync()).AsStream();
            using (var reader = (new StreamReader(stream, enc, true)) as TextReader)
            {
                htmls = await reader.ReadToEndAsync();
            }

            //ステータスコード確認
            if (response.StatusCode == HttpStatusCode.Found)
            {
                var respons = await client.GetAsync(new Uri(response.Headers.Location.AbsoluteUri));

                var streamm = (await respons.Content.ReadAsBufferAsync()).AsStream();
                using (var reader = (new StreamReader(streamm, enc, true)) as TextReader)
                {
                    htmls = await reader.ReadToEndAsync();
                }
            }
            
            return htmls;
        }

    }
